// <auto-generated />
using System;
using Dgmjr.Identity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dgmjr.Identity.EntityFrameworkCore.Migrations.Migrations
{
    [DbContext(typeof(AppIdentityDbContext))]
    partial class AppIdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationClaimType<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ApplicationUserId")
                        .HasColumnType("bigint")
                        .HasColumnName("ApplicationUser<long>Id");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Example")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("ValueTypeUri")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_ClaimType");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("Uri")
                        .IsUnique()
                        .HasDatabaseName("ix_tbl_ClaimType_Uri");

                    b.HasIndex("ValueTypeUri");

                    b.ToTable("tbl_ClaimType", "id", t =>
                        {
                            t.HasComment("A claim type is a type of claim that can be assigned to a user.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_ClaimTypeHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 33L,
                            Description = "The claim type for a CommonName",
                            Name = "CommonName",
                            Uri = "http://schemas.microsoft.com/claims/CommonName",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 34L,
                            Description = "The claim type for a Email",
                            Name = "Email",
                            Uri = "http://schemas.microsoft.com/claims/emailaddress",
                            ValueTypeUri = "urn:oasis:names:tc:xacml:1.0:data-type:rfc822Name"
                        },
                        new
                        {
                            Id = 35L,
                            Description = "The claim type for a Upn",
                            Name = "Upn",
                            Uri = "http://schemas.microsoft.com/claims/upn",
                            ValueTypeUri = "http://schemas.xmlsoap.org/identity/claimsUPN"
                        },
                        new
                        {
                            Id = 36L,
                            Description = "The claim type for a AuthenticationInstant",
                            Name = "AuthenticationInstant",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationinstant",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#dateTime"
                        },
                        new
                        {
                            Id = 37L,
                            Description = "The claim type for a AuthenticationMethod",
                            Name = "AuthenticationMethod",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/authenticationmethod",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 38L,
                            Description = "The claim type for a CookiePath",
                            Name = "CookiePath",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/cookiepath",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 39L,
                            Description = "The claim type for a DenyOnlyPrimaryGroupSid",
                            Name = "DenyOnlyPrimaryGroupSid",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarygroupsid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 40L,
                            Description = "The claim type for a DenyOnlyPrimarySid",
                            Name = "DenyOnlyPrimarySid",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlyprimarysid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 41L,
                            Description = "The claim type for a DenyOnlyWindowsDeviceGroup",
                            Name = "DenyOnlyWindowsDeviceGroup",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/denyonlywindowsdevicegroup",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 42L,
                            Description = "The claim type for a DisplayName",
                            Name = "DisplayName",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/displayname",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 43L,
                            Description = "The claim type for a Dsa",
                            Name = "Dsa",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/dsa",
                            ValueTypeUri = "http://www.w3.org/2000/09/xmldsig#DSAKeyValue"
                        },
                        new
                        {
                            Id = 44L,
                            Description = "The claim type for a Expiration",
                            Name = "Expiration",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/expiration",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#dateTime"
                        },
                        new
                        {
                            Id = 45L,
                            Description = "The claim type for a Expired",
                            Name = "Expired",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/expired",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#boolean"
                        },
                        new
                        {
                            Id = 46L,
                            Description = "The claim type for a GroupSid",
                            Name = "GroupSid",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/groupsid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 47L,
                            Description = "The claim type for a IsPersistent",
                            Name = "IsPersistent",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/ispersistent",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#boolean"
                        },
                        new
                        {
                            Id = 48L,
                            Description = "The claim type for a PrimaryGroupSid",
                            Name = "PrimaryGroupSid",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/primarygroupsid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 49L,
                            Description = "The claim type for a PrimarySid",
                            Name = "PrimarySid",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/primarysid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 50L,
                            Description = "The claim type for a Role",
                            Name = "Role",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/role",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 51L,
                            Description = "The claim type for a SerialNumber",
                            Name = "SerialNumber",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/serialnumber",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 52L,
                            Description = "The claim type for a UserData",
                            Name = "UserData",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/userdata",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 53L,
                            Description = "The claim type for a Version",
                            Name = "Version",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/version",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 54L,
                            Description = "The claim type for a WindowsAccountName",
                            Name = "WindowsAccountName",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsaccountname",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 55L,
                            Description = "The claim type for a WindowsDeviceClaim",
                            Name = "WindowsDeviceClaim",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsdeviceclaim",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 56L,
                            Description = "The claim type for a WindowsDeviceGroup",
                            Name = "WindowsDeviceGroup",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsdevicegroup",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 57L,
                            Description = "The claim type for a WindowsFqbnVersion",
                            Name = "WindowsFqbnVersion",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsfqbnversion",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 58L,
                            Description = "The claim type for a WindowsSubAuthority",
                            Name = "WindowsSubAuthority",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowssubauthority",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 59L,
                            Description = "The claim type for a WindowsUserClaim",
                            Name = "WindowsUserClaim",
                            Uri = "http://schemas.microsoft.com/ws/2008/06/identity/claims/windowsuserclaim",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 60L,
                            Description = "The claim type for a passwordchangeurl",
                            Name = "passwordchangeurl",
                            Uri = "http://schemas.microsoft.com/ws/2012/01/passwordchangeurl",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 61L,
                            Description = "The claim type for a passwordexpirationdays",
                            Name = "passwordexpirationdays",
                            Uri = "http://schemas.microsoft.com/ws/2012/01/passwordexpirationdays",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 62L,
                            Description = "The claim type for a passwordexpirationtime",
                            Name = "passwordexpirationtime",
                            Uri = "http://schemas.microsoft.com/ws/2012/01/passwordexpirationtime",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 63L,
                            Description = "The claim type for a Anonymous",
                            Name = "Anonymous",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/anonymous",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 64L,
                            Description = "The claim type for a Authenticated",
                            Name = "Authenticated",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authenticated",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#boolean"
                        },
                        new
                        {
                            Id = 65L,
                            Description = "The claim type for a AuthorizationDecision",
                            Name = "AuthorizationDecision",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/authorizationdecision",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 66L,
                            Description = "The claim type for a Country",
                            Name = "Country",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 67L,
                            Description = "The claim type for a DateOfBirth",
                            Name = "DateOfBirth",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dateofbirth",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#dateTime"
                        },
                        new
                        {
                            Id = 68L,
                            Description = "The claim type for a DenyOnlySid",
                            Name = "DenyOnlySid",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/denyonlysid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 69L,
                            Description = "The claim type for a Dns",
                            Name = "Dns",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/dns",
                            ValueTypeUri = "http://schemas.xmlsoap.org/identity/claims/dns"
                        },
                        new
                        {
                            Id = 70L,
                            Description = "The claim type for a Email2005",
                            Name = "Email2005",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                            ValueTypeUri = "urn:oasis:names:tc:xacml:1.0:data-type:rfc822Name"
                        },
                        new
                        {
                            Id = 71L,
                            Description = "The claim type for a Gender",
                            Name = "Gender",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/gender",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 72L,
                            Description = "The claim type for a GivenName",
                            Name = "GivenName",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 73L,
                            Description = "The claim type for a Hash",
                            Name = "Hash",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/hash",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 74L,
                            Description = "The claim type for a HomePhone",
                            Name = "HomePhone",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/homephone",
                            ValueTypeUri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/phone"
                        },
                        new
                        {
                            Id = 75L,
                            Description = "The claim type for a Locality",
                            Name = "Locality",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/locality",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 76L,
                            Description = "The claim type for a MobilePhone	",
                            Name = "MobilePhone	",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/mobilephone",
                            ValueTypeUri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/phone"
                        },
                        new
                        {
                            Id = 77L,
                            Description = "The claim type for a Name",
                            Name = "Name",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 78L,
                            Description = "The claim type for a NameIdentifier",
                            Name = "NameIdentifier",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 79L,
                            Description = "The claim type for a OtherPhone",
                            Name = "OtherPhone",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/otherphone",
                            ValueTypeUri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/phone"
                        },
                        new
                        {
                            Id = 80L,
                            Description = "The claim type for a PostalCode",
                            Name = "PostalCode",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/postalcode",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 81L,
                            Description = "The claim type for a Rsa",
                            Name = "Rsa",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/rsa",
                            ValueTypeUri = "http://www.w3.org/2000/09/xmldsig#RSAKeyValue"
                        },
                        new
                        {
                            Id = 82L,
                            Description = "The claim type for a Sid",
                            Name = "Sid",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/sid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 83L,
                            Description = "The claim type for a Spn",
                            Name = "Spn",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/spn",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 84L,
                            Description = "The claim type for a StateOrProvince",
                            Name = "StateOrProvince",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/stateorprovince",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 85L,
                            Description = "The claim type for a StreetAddress",
                            Name = "StreetAddress",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/streetaddress",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 86L,
                            Description = "The claim type for a Surname",
                            Name = "Surname",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 87L,
                            Description = "The claim type for a System",
                            Name = "System",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/system",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 88L,
                            Description = "The claim type for a Thumbprint",
                            Name = "Thumbprint",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/thumbprint. A thumbprint is a globally unique SHA-1 hash of an X.509 certificate",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 89L,
                            Description = "The claim type for a Upn2005",
                            Name = "Upn2005",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn",
                            ValueTypeUri = "http://schemas.xmlsoap.org/identity/claimsUPN"
                        },
                        new
                        {
                            Id = 90L,
                            Description = "The claim type for a Uri",
                            Name = "Uri",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/uri",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 91L,
                            Description = "The claim type for a Webpage",
                            Name = "Webpage",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/webpage",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 92L,
                            Description = "The claim type for a X500DistinguishedName",
                            Name = "X500DistinguishedName",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/x500distinguishedname",
                            ValueTypeUri = "urn:oasis:names:tc:xacml:1.0:data-type:x500Name"
                        },
                        new
                        {
                            Id = 93L,
                            Description = "The claim type for a Actor",
                            Name = "Actor",
                            Uri = "http://schemas.xmlsoap.org/ws/2009/09/identity/claims/actor",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 94L,
                            Description = "The claim type for a blank",
                            Name = "blank",
                            Uri = "https://dgmjr.io/identity/unknown",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 95L,
                            Description = "The claim type for a acr",
                            Name = "acr",
                            Uri = "https://jwt.io/acr",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 96L,
                            Description = "The claim type for a actort",
                            Name = "actort",
                            Uri = "https://jwt.io/actort",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 97L,
                            Description = "The claim type for a aio",
                            Name = "aio",
                            Uri = "https://jwt.io/aio",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 98L,
                            Description = "The claim type for a appid",
                            Name = "appid",
                            Uri = "https://jwt.io/appid",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#uuidType"
                        },
                        new
                        {
                            Id = 99L,
                            Description = "The claim type for a appidacr",
                            Name = "appidacr",
                            Uri = "https://jwt.io/appidacr",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 100L,
                            Description = "The claim type for a at_hash",
                            Name = "at_hash",
                            Uri = "https://jwt.io/at_hash",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 101L,
                            Description = "The claim type for a azp",
                            Name = "azp",
                            Uri = "https://jwt.io/azp",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#uuidType"
                        },
                        new
                        {
                            Id = 102L,
                            Description = "The claim type for a azpacr",
                            Name = "azpacr",
                            Uri = "https://jwt.io/azpacr",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 103L,
                            Description = "The claim type for a birthdate",
                            Name = "birthdate",
                            Uri = "https://jwt.io/birthdate",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#date"
                        },
                        new
                        {
                            Id = 104L,
                            Description = "The claim type for a c_hash",
                            Name = "c_hash",
                            Uri = "https://jwt.io/c_hash",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 105L,
                            Description = "The claim type for a email",
                            Name = "email",
                            Uri = "https://jwt.io/email",
                            ValueTypeUri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"
                        },
                        new
                        {
                            Id = 106L,
                            Description = "The claim type for a exp",
                            Name = "exp",
                            Uri = "https://jwt.io/exp",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 107L,
                            Description = "The claim type for a familyname",
                            Name = "familyname",
                            Uri = "https://jwt.io/familyname",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 108L,
                            Description = "The claim type for a givenname",
                            Name = "givenname",
                            Uri = "https://jwt.io/givenname",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 109L,
                            Description = "The claim type for a groups:src1",
                            Name = "groups:src1",
                            Uri = "https://jwt.io/groups:src1",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#json"
                        },
                        new
                        {
                            Id = 110L,
                            Description = "The claim type for a hasgroups",
                            Name = "hasgroups",
                            Uri = "https://jwt.io/hasgroups",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#boolean"
                        },
                        new
                        {
                            Id = 111L,
                            Description = "The claim type for a iat",
                            Name = "iat",
                            Uri = "https://jwt.io/iat",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 112L,
                            Description = "The claim type for a idp",
                            Name = "idp",
                            Uri = "https://jwt.io/idp",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 113L,
                            Description = "The claim type for a iss",
                            Name = "iss",
                            Uri = "https://jwt.io/iss",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 114L,
                            Description = "The claim type for a name",
                            Name = "name",
                            Uri = "https://jwt.io/name",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 115L,
                            Description = "The claim type for a nameid",
                            Name = "nameid",
                            Uri = "https://jwt.io/nameid",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer64"
                        },
                        new
                        {
                            Id = 116L,
                            Description = "The claim type for a nbf",
                            Name = "nbf",
                            Uri = "https://jwt.io/nbf",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 117L,
                            Description = "The claim type for a nonce",
                            Name = "nonce",
                            Uri = "https://jwt.io/nonce",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 118L,
                            Description = "The claim type for a oid",
                            Name = "oid",
                            Uri = "https://jwt.io/oid",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#uuidType"
                        },
                        new
                        {
                            Id = 119L,
                            Description = "The claim type for a preferred_username",
                            Name = "preferred_username",
                            Uri = "https://jwt.io/preferred_username",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 120L,
                            Description = "The claim type for a rh",
                            Name = "rh",
                            Uri = "https://jwt.io/rh",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 121L,
                            Description = "The claim type for a scp",
                            Name = "scp",
                            Uri = "https://jwt.io/scp",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 122L,
                            Description = "The claim type for a scp",
                            Name = "scp",
                            Uri = "https://jwt.io/scp",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 123L,
                            Description = "The claim type for a sub",
                            Name = "sub",
                            Uri = "https://jwt.io/sub",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 124L,
                            Description = "The claim type for a tid",
                            Name = "tid",
                            Uri = "https://jwt.io/tid",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#uuidType"
                        },
                        new
                        {
                            Id = 125L,
                            Description = "The claim type for a unique_name",
                            Name = "unique_name",
                            Uri = "https://jwt.io/unique_name",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 126L,
                            Description = "The claim type for a uti",
                            Name = "uti",
                            Uri = "https://jwt.io/uti",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 127L,
                            Description = "The claim type for a ver",
                            Name = "ver",
                            Uri = "https://jwt.io/ver",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 128L,
                            Description = "The claim type for a website",
                            Name = "website",
                            Uri = "https://jwt.io/website",
                            ValueTypeUri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 129L,
                            Description = "The claim type for a objectid",
                            Name = "objectid",
                            Uri = "https://www.mongodb.com/docs/manual/reference/method/ObjectId",
                            ValueTypeUri = "https://www.mongodb.com/docs/manual/reference/method/ObjectId"
                        },
                        new
                        {
                            Id = 130L,
                            Description = "The claim type for a Custom",
                            Name = "Custom",
                            Uri = "urn:identity:claim:custom",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 131L,
                            Description = "The claim type for a GenericClaimTypePattern",
                            Name = "GenericClaimTypePattern",
                            Uri = "urn:identity:claim:custom:{0}",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 132L,
                            Description = "The claim type for a GenericClaimsIssuerTypePattern",
                            Name = "GenericClaimsIssuerTypePattern",
                            Uri = "urn:identity:claim:issuer:custom:{0}",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 133L,
                            Description = "The claim type for a Unknown",
                            Name = "Unknown",
                            Uri = "urn:identity:claim:unknown",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 134L,
                            Description = "The claim type for a SecurityStamp",
                            Name = "SecurityStamp",
                            Uri = "urn:identity:securitystamp",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 135L,
                            Description = "The claim type for a LoginProviderPattern",
                            Name = "LoginProviderPattern",
                            Uri = "urn:users:login:provider:{0}",
                            ValueTypeUri = "http://www.w3.org/2001/XMLSchema#string"
                        });
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationClaimValueType<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Default")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Example")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_ClaimValueType");

                    b.HasIndex("Uri")
                        .IsUnique();

                    b.ToTable("tbl_ClaimValueType", "id", t =>
                        {
                            t.HasComment("A claim value type is a type of value that a claim can have.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_ClaimValueTypeHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Default = "",
                            Description = "The claim value type for a String",
                            Example = "",
                            Name = "String",
                            Uri = "http://schemas.xmlsoap.org/identity/claims/dns"
                        },
                        new
                        {
                            Id = 2L,
                            Default = "",
                            Description = "The claim value type for a EmailAddress",
                            Example = "",
                            Name = "EmailAddress",
                            Uri = "http://schemas.xmlsoap.org/identity/claimsUPN"
                        },
                        new
                        {
                            Id = 3L,
                            Default = "",
                            Description = "The claim value type for a EmailAddress",
                            Example = "",
                            Name = "EmailAddress",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress"
                        },
                        new
                        {
                            Id = 4L,
                            Default = "+10000000000",
                            Description = "The claim value type for a PhoneNumber",
                            Example = "+19174097331",
                            Name = "PhoneNumber",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/phone"
                        },
                        new
                        {
                            Id = 5L,
                            Default = "",
                            Description = "The claim value type for a RSA",
                            Example = "",
                            Name = "RSA",
                            Uri = "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/rsa"
                        },
                        new
                        {
                            Id = 6L,
                            Default = "",
                            Description = "The claim value type for a XElement",
                            Example = "",
                            Name = "XElement",
                            Uri = "http://www.w3.org/2000/09/xmldsig#DSAKeyValue"
                        },
                        new
                        {
                            Id = 7L,
                            Default = "",
                            Description = "The claim value type for a KeyInfo",
                            Example = "",
                            Name = "KeyInfo",
                            Uri = "http://www.w3.org/2000/09/xmldsig#KeyInfo"
                        },
                        new
                        {
                            Id = 8L,
                            Default = "",
                            Description = "The claim value type for a XElement",
                            Example = "",
                            Name = "XElement",
                            Uri = "http://www.w3.org/2000/09/xmldsig#RSAKeyValue"
                        },
                        new
                        {
                            Id = 9L,
                            Default = "",
                            Description = "The claim value type for a Byte[]",
                            Example = "",
                            Name = "Byte[]",
                            Uri = "http://www.w3.org/2001/XMLSchema#base64Binary"
                        },
                        new
                        {
                            Id = 10L,
                            Default = "",
                            Description = "The claim value type for a Boolean",
                            Example = "",
                            Name = "Boolean",
                            Uri = "http://www.w3.org/2001/XMLSchema#boolean"
                        },
                        new
                        {
                            Id = 11L,
                            Default = "",
                            Description = "The claim value type for a DateOnly",
                            Example = "",
                            Name = "DateOnly",
                            Uri = "http://www.w3.org/2001/XMLSchema#date"
                        },
                        new
                        {
                            Id = 12L,
                            Default = "",
                            Description = "The claim value type for a DateTime",
                            Example = "",
                            Name = "DateTime",
                            Uri = "http://www.w3.org/2001/XMLSchema#dateTime"
                        },
                        new
                        {
                            Id = 13L,
                            Default = "",
                            Description = "The claim value type for a DayTimeDuration",
                            Example = "",
                            Name = "DayTimeDuration",
                            Uri = "http://www.w3.org/2001/XMLSchema#dayTimeDuration"
                        },
                        new
                        {
                            Id = 14L,
                            Default = "",
                            Description = "The claim value type for a Double",
                            Example = "",
                            Name = "Double",
                            Uri = "http://www.w3.org/2001/XMLSchema#double"
                        },
                        new
                        {
                            Id = 15L,
                            Default = "",
                            Description = "The claim value type for a String",
                            Example = "",
                            Name = "String",
                            Uri = "http://www.w3.org/2001/XMLSchema#fqbn"
                        },
                        new
                        {
                            Id = 16L,
                            Default = "",
                            Description = "The claim value type for a Byte[]",
                            Example = "",
                            Name = "Byte[]",
                            Uri = "http://www.w3.org/2001/XMLSchema#hexBinary"
                        },
                        new
                        {
                            Id = 17L,
                            Default = "",
                            Description = "The claim value type for a Int32",
                            Example = "",
                            Name = "Int32",
                            Uri = "http://www.w3.org/2001/XMLSchema#integer"
                        },
                        new
                        {
                            Id = 18L,
                            Default = "",
                            Description = "The claim value type for a Int32",
                            Example = "",
                            Name = "Int32",
                            Uri = "http://www.w3.org/2001/XMLSchema#integer32"
                        },
                        new
                        {
                            Id = 19L,
                            Default = "",
                            Description = "The claim value type for a Int64",
                            Example = "",
                            Name = "Int64",
                            Uri = "http://www.w3.org/2001/XMLSchema#integer64"
                        },
                        new
                        {
                            Id = 20L,
                            Default = "",
                            Description = "The claim value type for a String",
                            Example = "",
                            Name = "String",
                            Uri = "http://www.w3.org/2001/XMLSchema#string"
                        },
                        new
                        {
                            Id = 21L,
                            Default = "",
                            Description = "The claim value type for a TimeOnly",
                            Example = "",
                            Name = "TimeOnly",
                            Uri = "http://www.w3.org/2001/XMLSchema#time"
                        },
                        new
                        {
                            Id = 22L,
                            Default = "",
                            Description = "The claim value type for a UInt32",
                            Example = "",
                            Name = "UInt32",
                            Uri = "http://www.w3.org/2001/XMLSchema#uinteger32"
                        },
                        new
                        {
                            Id = 23L,
                            Default = "",
                            Description = "The claim value type for a UInt64",
                            Example = "",
                            Name = "UInt64",
                            Uri = "http://www.w3.org/2001/XMLSchema#uinteger64"
                        },
                        new
                        {
                            Id = 24L,
                            Default = "",
                            Description = "The claim value type for a YearMonthDuration",
                            Example = "",
                            Name = "YearMonthDuration",
                            Uri = "http://www.w3.org/2001/XMLSchema#yearMonthDuration"
                        },
                        new
                        {
                            Id = 25L,
                            Default = "000000000000000000000000",
                            Description = "The claim value type for a ObjectId",
                            Example = "abcdef0123456789abcdef01",
                            Name = "ObjectId",
                            Uri = "https://www.mongodb.com/docs/manual/reference/method/ObjectId"
                        },
                        new
                        {
                            Id = 26L,
                            Default = "",
                            Description = "The claim value type for a uri",
                            Example = "",
                            Name = "uri",
                            Uri = "https://www.w3.org/2001/XMLSchema#anyURI"
                        },
                        new
                        {
                            Id = 27L,
                            Default = "",
                            Description = "The claim value type for a JsonElement",
                            Example = "",
                            Name = "JsonElement",
                            Uri = "https://www.w3.org/2001/XMLSchema#json"
                        },
                        new
                        {
                            Id = 28L,
                            Default = "",
                            Description = "The claim value type for a Guid",
                            Example = "",
                            Name = "Guid",
                            Uri = "https://www.w3.org/2001/XMLSchema#uuidType"
                        },
                        new
                        {
                            Id = 29L,
                            Default = "nobody@nowhere.com",
                            Description = "The claim value type for a EmailAddress",
                            Example = "somewhere@overtherainbow.com",
                            Name = "EmailAddress",
                            Uri = "urn:oasis:names:tc:xacml:1.0:data-type:rfc822Name"
                        },
                        new
                        {
                            Id = 30L,
                            Default = "",
                            Description = "The claim value type for a X500DistinguishedName",
                            Example = "",
                            Name = "X500DistinguishedName",
                            Uri = "urn:oasis:names:tc:xacml:1.0:data-type:x500Name"
                        },
                        new
                        {
                            Id = 31L,
                            Default = "",
                            Description = "The claim value type for a String",
                            Example = "",
                            Name = "String",
                            Uri = "urn:oasis:names:tc:xacml:2.0:data-type:dnsName"
                        },
                        new
                        {
                            Id = 32L,
                            Default = "",
                            Description = "The claim value type for a ipAddress",
                            Example = "",
                            Name = "ipAddress",
                            Uri = ""
                        });
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationClaimsIssuer<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_ClaimsIssuer");

                    b.ToTable("tbl_ClaimsIssuer", "id", t =>
                        {
                            t.HasComment("A claims issuer is an entity that issues claims.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_ClaimsIssuerHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "DGMJR-IO Identity Server",
                            Name = "DGMJR-IO",
                            Uri = "https://dgmjr.io/"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Telegram",
                            Name = "Telegram",
                            Uri = "https://telegram.org/identity"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "SendPulse",
                            Name = "SendPulse",
                            Uri = "https://sendpulse.com/identity"
                        });
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationRole<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("rowversion");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_Role");

                    b.ToTable("tbl_Role", "id", t =>
                        {
                            t.HasComment("The Roles table contains the roles for the application.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_RoleHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationRoleClaim<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("OriginalIssuer")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_RoleClaim");

                    b.HasIndex("Issuer");

                    b.HasIndex("RoleId");

                    b.HasIndex("Type");

                    b.ToTable("tbl_RoleClaim", "id", t =>
                        {
                            t.HasComment("A role claim is a claim that is assigned to a role.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_RoleClaimHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUser<long>", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<byte[]>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasDefaultValue("?")
                        .HasComment("Gender data types:\nM: Male (A person of the male sex, i.e., a human being with both an X and a Y chromosome and (usually) a penis (e.g., eunuchs and nullos are also still men).)\nF: Female (A person of the female sex, i.e., a human being with two X chromosomes and (usually) a vagina.  Does not (and never will) have a penis.)\nXYYM: XYY Male (A person of the male sex, i.e., a human being with both an X and a Y chromosome, and (usually) a penis, as well as an extra \"Y\" chromosome (for good luck).)\nXXYM: XXY Male (A person of the male sex, i.e., a human being with both an X and a Y chromosome, and (usually) a penis, as well as an extra \"X\" chromosome (for good luck).)\n?: Unknown (A person of unknown sex.)\nO: Genderqueer (Someone who thinks it is sooooooo special that it is in a gender all of its own.)\nA: Agender (A schizophrenic human who thinks s/he is too fucking special & refuses to identify with either gender (even if it's blatantly obvious))\nO: Genderfluid (A schizophrenic human who thinks \"they\" are simultaneously male and female.)\nN: Gender Neutral (A human who thinks s/he is too special.)\nTM: Transman (A confused female who fancies herself a male.  Often takes testosterone supplements to grow facial hair, but can't change her DNA or the fact that she doesn't (and never will) have a penis..)\nTF: Transwoman (A confused male who fancies himself a female.  Often gets breast implants.  May or may not have his penis surgically removed, but still can't change his DNA.)\nO: Genderfluid (A schizophrenic human who thinks \"they\" are simultaneously male and female.)");

                    b.Property<string>("GivenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsEmailConfirmed")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsLockoutEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsLockoutEnabled")
                        .HasDefaultValueSql("1");

                    b.Property<bool>("IsPhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsPhoneNumberConfirmed")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("IsTwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("IsTwoFactorEnabled")
                        .HasDefaultValueSql("0");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("'1/1/1970 12:00:00 AM -05:00'");

                    b.Property<string>("NormalizedEmailAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NormalizedUsername")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelegramUsername")
                        .HasMaxLength(33)
                        .IsUnicode(false)
                        .HasColumnType("varchar(33)");

                    b.Property<string>("Username")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_User");

                    b.HasIndex("EmailAddress")
                        .HasDatabaseName("ix_tbl_UserEmailAddress");

                    b.HasIndex("NormalizedEmailAddress")
                        .HasDatabaseName("ix_tbl_UserNormalizedEmailAddress");

                    b.HasIndex("NormalizedUsername")
                        .HasDatabaseName("ix_tbl_UserNormalizedUsername");

                    b.HasIndex("TelegramUsername")
                        .HasDatabaseName("ix_tbl_UserTelegramUsername");

                    b.HasIndex("Username")
                        .HasDatabaseName("ix_tbl_UserUsername");

                    b.ToTable("tbl_User", "id", t =>
                        {
                            t.HasComment("A user is a person who can be authenticated.");

                            t.HasCheckConstraint("TelegramUsername", "\r\n                    [TelegramUsername] IS NULL\r\n                    OR (\r\n                            len([TelegramUsername]) >= 5\r\n                            AND len([TelegramUsername]) <= (32 + 1)\r\n                            AND [TelegramUsername] LIKE '@%'\r\n                        )\r\n                    ");

                            t.HasCheckConstraint("ck_EmailAddress", "[data].[ufn_IsValidEmailAddress](EmailAddress) = 1");

                            t.HasCheckConstraint("ck_Gender", "[id].[ufn_IsValidGender](Gender) = 1");

                            t.HasCheckConstraint("ck_PhoneNumber", "[data].[ufn_IsValidPhoneNumber](PhoneNumber) = 1");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_UserHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserClaim<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<string>("OriginalIssuer")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("ValueType")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.HasKey("Id")
                        .HasName("pk_tbl_UserClaim");

                    b.HasIndex("Issuer");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserClaim", "id", t =>
                        {
                            t.HasComment("A user claim is a claim that is assigned to a user.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_UserClaimHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserLogin<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("pk_tbl_UserLogin");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserLogin", "id", t =>
                        {
                            t.HasComment("A user login is a login that is assigned to a user.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_UserLoginHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserRole<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("RoleId")
                        .HasColumnOrder(2);

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("UserId")
                        .HasColumnOrder(1);

                    b.HasKey("Id")
                        .HasName("pk_tbl_UserRole");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserRole", "id", t =>
                        {
                            t.HasComment("A user role is a role that is assigned to a user.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_UserRoleHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserToken<long>", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("Created");

                    b.Property<DateTimeOffset?>("Deleted")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("ProviderDisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Value");

                    b.HasKey("Id")
                        .HasName("pk_tbl_UserToken");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_UserToken", "id", t =>
                        {
                            t.HasComment("A user token is a token that is assigned to a user.");
                        });

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("tbl_UserTokenHistory", "id");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationClaimType<long>", b =>
                {
                    b.HasOne("Dgmjr.Identity.Models.ApplicationUser<long>", null)
                        .WithMany("ClaimTypes")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("Dgmjr.Identity.Models.ApplicationClaimValueType<long>", "ValueType")
                        .WithMany("ClaimTypes")
                        .HasForeignKey("ValueTypeUri")
                        .HasPrincipalKey("Uri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ValueType");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationRoleClaim<long>", b =>
                {
                    b.HasOne("Dgmjr.Identity.Models.ApplicationClaimsIssuer<long>", null)
                        .WithMany("RoleClaims")
                        .HasForeignKey("Issuer")
                        .HasPrincipalKey("Uri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dgmjr.Identity.Models.ApplicationRole<long>", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dgmjr.Identity.Models.ApplicationClaimType<long>", "ClaimType")
                        .WithMany()
                        .HasForeignKey("Type")
                        .HasPrincipalKey("Uri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaimType");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserClaim<long>", b =>
                {
                    b.HasOne("Dgmjr.Identity.Models.ApplicationClaimsIssuer<long>", null)
                        .WithMany("UserClaims")
                        .HasForeignKey("Issuer")
                        .HasPrincipalKey("Uri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dgmjr.Identity.Models.ApplicationClaimType<long>", "ClaimType")
                        .WithMany()
                        .HasForeignKey("Type")
                        .HasPrincipalKey("Uri")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dgmjr.Identity.Models.ApplicationUser<long>", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaimType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserLogin<long>", b =>
                {
                    b.HasOne("Dgmjr.Identity.Models.ApplicationUser<long>", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserRole<long>", b =>
                {
                    b.HasOne("Dgmjr.Identity.Models.ApplicationRole<long>", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dgmjr.Identity.Models.ApplicationUser<long>", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUserToken<long>", b =>
                {
                    b.HasOne("Dgmjr.Identity.Models.ApplicationUser<long>", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationClaimValueType<long>", b =>
                {
                    b.Navigation("ClaimTypes");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationClaimsIssuer<long>", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationRole<long>", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Dgmjr.Identity.Models.ApplicationUser<long>", b =>
                {
                    b.Navigation("ClaimTypes");

                    b.Navigation("Logins");

                    b.Navigation("Tokens");

                    b.Navigation("UserClaims");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
